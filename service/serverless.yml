---

frameworkVersion: 1.27.3

service: sanity

provider:
  name: aws
  region: us-east-1
  stage: dev
  tag: default
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:GetObject
      Resource:
        - "arn:aws:s3:::${self:custom.chrome_bucket}/*"
    - Effect: Allow
      Action:
        - s3:GetObject
        - s3:PutObject
      Resource:
        - "arn:aws:s3:::${self:custom.screenshot_bucket}/*"
  environment:
    SLS_STAGE: ${self:custom.stage}
    CHROME_BUCKET: ${self:custom.chrome_bucket}
    SCREENSHOT_BUCKET: ${self:custom.screenshot_bucket}

custom:
  region: ${env:SERVERLESS_REGION, self:provider.region}
  stage: ${env:SERVERLESS_STAGE, self:provider.stage}
  tag: ${env:SERVERLESS_TAG, self:provider.tag}
  chrome_bucket: sr-chrome-${self:custom.stage}-${self:custom.tag}
  screenshot_bucket: sr-screenshots-${self:custom.stage}-${self:custom.tag}
  functon_name: sanity-runner-${self:custom.stage}-${self:custom.tag}

package:
  exclude:
    - chrome/**
    - test/**
    - Makefile
    - yarn.lock

functions:
  sanityLauncher:
    runtime: nodejs8.10
    memorySize: 2048
    timeout: 60
    handler: src/lambdaHandler.handler
    name: ${env:SERVERLESS_FUNC, self:custom.functon_name}

resources:
  Resources:
    THMChromeImages:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.chrome_bucket}
    THMSanityScreenshots:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.screenshot_bucket}
        LifecycleConfiguration:
          Rules:
            - ExpirationInDays: 30
              Status: Enabled
